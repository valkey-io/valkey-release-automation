name: Trigger Automation for Docker update

on:
  workflow_call:
    inputs:
      version:
        type: string
        description: "Version of the package to build"
        required: true
    secrets:
      PAT_TOKEN:
        required: true
    outputs:
      bashbrew_output:
        description: "Bashbrew output in JSON format"
        value: ${{ jobs.build-new-docker.outputs.bashbrew_json }}

jobs:
  build-new-docker:
    runs-on: ubuntu-latest
    outputs:
      bashbrew_json: ${{ steps.generate-bashbrew.outputs.bashbrew_content }}
    steps:
      - name: Validate inputs
        run: |
          if [[ ! "${{ inputs.version }}" =~ ^([0-9]+\.[0-9]+\.[0-9]+(-rc[0-9]+)?|unstable)$ ]]; then
            echo "Invalid version format. Expected format: x.y.z or 'unstable'"
            exit 1
          fi
      
      - name: Set up bashbrew
        uses: docker-library/bashbrew@v0.1.12
      
      - name: Check if bashbrew is installed
        run: |
          bashbrew --version

      - name: Checkout valkey-container
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: ${{ github.repository_owner }}/valkey-container
          path: valkey-container
          token: ${{ secrets.PAT_TOKEN }}

      - name: Checkout valkey-release-automation
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/valkey-release-automation
          path: valkey-release-automation
          token: ${{ secrets.PAT_TOKEN }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Strip patch version
        id: strip_version
        run: |
          if [[ "${{ inputs.version }}" == "unstable" ]]; then
            echo "Version is unstable"
            echo "stripped_version=unstable" >> $GITHUB_OUTPUT
          elif [[ "${{ inputs.version }}" =~ ^([0-9]+\.[0-9]+)\.[0-9]+(-rc[0-9]+)?$ ]]; then
            stripped_version="${BASH_REMATCH[1]}"
            echo "Stripped version: $stripped_version"
            echo "stripped_version=$stripped_version" >> $GITHUB_OUTPUT
          else
            echo "Version doesn't match expected format"
            exit 1
          fi
        shell: bash
      
      - name: Update new version
        id: version-update
        run: |
            cd valkey-container
            # Download the scripts for bashbrew in local
            jqt='.jq-template.awk'
            wget -qO "$jqt" 'https://github.com/docker-library/bashbrew/raw/9f6a35772ac863a0241f147c820354e4008edf38/scripts/jq-template.awk'
            jqf='.template-helper-functions.jq'
            wget -qO "$jqf" 'https://github.com/docker-library/bashbrew/raw/08c926140ad0af22de58c2a2656afda58082ba3e/scripts/template-helper-functions.jq'

            # Run update script
            ./update.sh ${{ steps.strip_version.outputs.stripped_version }}
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            
            # Only commit if there are changes
            if ! git diff --cached --quiet; then
              git commit -m "Update versions.json and Dockerfiles for version ${{ inputs.version }}" -s
              echo "has_changes=true" >> $GITHUB_OUTPUT
            else
              echo "No changes to commit for version update - PR will not be created."
              echo "has_changes=false" >> $GITHUB_OUTPUT
            fi

      - name: Update container aliases
        id: alias-update
        run: |
          cd valkey-container
          python ../valkey-release-automation/scripts/automate_alias_update.py \
            generate-stackbrew-library.sh \
            ${{ inputs.version }}
          
          git add generate-stackbrew-library.sh
          
          # Only commit if there are changes
          if ! git diff --cached --quiet; then
            git commit -m "Update container aliases for version ${{ inputs.version }}" -s
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes to commit for aliases - PR will not be created."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate bashbrew output
        id: generate-bashbrew
        run: |
          cd valkey-container
          BASHBREW_SCRIPTS=/home/runner/work/_actions/docker-library/bashbrew/v0.1.12/scripts
          "$BASHBREW_SCRIPTS/github-actions/generate.sh" > bashbrew_output.json
          echo "bashbrew_content=$(cat bashbrew_output.json)" >> $GITHUB_OUTPUT

      - name: Update Docker Hub Description File
        id: dockerhub-description-update
        run: |
          python valkey-release-automation/scripts/automate_docker_description.py valkey-container/bashbrew_output.json valkey-container/dockerhub-description-template.md valkey-container/dockerhub-description.md
          rm valkey-container/bashbrew_output.json
          cd valkey-container
          git add .
          
          # Only commit if there are changes
          if ! git diff --cached --quiet; then
            git commit -m "Update Docker Hub description for version ${{ inputs.version }}" -s
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes to commit for Docker Hub description - PR will not be created."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: |
          steps.version-update.outputs.has_changes == 'true' || 
          steps.alias-update.outputs.has_changes == 'true' || 
          steps.dockerhub-description-update.outputs.has_changes == 'true'
        id: create-pr
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ secrets.PAT_TOKEN }}
          path: valkey-container
          branch: update-${{ inputs.version }}
          commit-message: "Preparing changes for version ${{ inputs.version }}"
          committer: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          delete-branch: true
          signoff: true
          author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          title: "Update to version ${{ inputs.version }}"
          body: |
            This pull request updates the repository to version `${{ inputs.version }}`.
            Please review the changes and merge when appropriate.